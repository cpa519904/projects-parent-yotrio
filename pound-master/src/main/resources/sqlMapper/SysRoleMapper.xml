<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yotrio.pound.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.yotrio.pound.model.SysRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_cname" jdbcType="VARCHAR" property="roleCname" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, role_cname, role_desc, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
    where role_name = #{roleName,jdbcType=VARCHAR}
  </select>
  <select id="findRolesByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    sys_role.role_name
    from sys_role,sys_user_role
    where sys_user_role.u_id = #{userId,jdbcType=INTEGER} AND sys_user_role.role_id = sys_role.id
  </select>
  <select id="findRoleIdsByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    sys_role.id
    from sys_role,sys_user_role
    where sys_user_role.u_id = #{userId,jdbcType=INTEGER} AND sys_user_role.role_id = sys_role.id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByIds" parameterType="java.util.List">
    delete from sys_role
    where id in
    <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.yotrio.pound.model.SysRole">
    insert into sys_role ( role_name, role_cname,
      role_desc, status)
    values ( #{roleName,jdbcType=VARCHAR}, #{roleCname,jdbcType=VARCHAR},
      #{roleDesc,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yotrio.pound.model.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleCname != null">
        role_cname,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCname != null">
        #{roleCname,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yotrio.pound.model.SysRole">
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCname != null">
        role_cname = #{roleCname,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yotrio.pound.model.SysRole">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_cname = #{roleCname,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCountByMap" parameterType="map" resultType="int">
    select count(*) from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  </if><if test="dynamicTableName == null or dynamicTableName == ''"> sys_role</if> <include refid="Base_Query_Map_Condition" /> 
  </select>
  <select id="selectListByMap" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  </if><if test="dynamicTableName == null or dynamicTableName == ''"> sys_role</if> <include refid="Base_Query_Map_Condition" />  order by  id desc
  </select>
  <sql id="Base_Query_Map_Condition">
    <trim prefix="where" prefixOverrides="and | or">
      <if test="id != null and id != ''">
         AND id = #{id,jdbcType=INTEGER}
      </if>
      <if test="roleName != null and roleName != ''">
         AND role_name = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleCname != null and roleCname != ''">
         AND role_cname = #{roleCname,jdbcType=VARCHAR}
      </if>
      <if test="roleDesc != null and roleDesc != ''">
         AND role_desc = #{roleDesc,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status != ''">
         AND status = #{status,jdbcType=INTEGER}
      </if>
      <if test="myGreater_id != null and myGreater_id != ''">
         AND id &gt; #{myGreater_id,jdbcType=INTEGER}
      </if>
      <if test="myGreater_roleName != null and myGreater_roleName != ''">
         AND role_name &gt; #{myGreater_roleName,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_roleCname != null and myGreater_roleCname != ''">
         AND role_cname &gt; #{myGreater_roleCname,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_roleDesc != null and myGreater_roleDesc != ''">
         AND role_desc &gt; #{myGreater_roleDesc,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_status != null and myGreater_status != ''">
         AND status &gt; #{myGreater_status,jdbcType=INTEGER}
      </if>
      <if test="myLesser_id != null and myLesser_id != ''">
         AND id &lt; #{myLesser_id,jdbcType=INTEGER}
      </if>
      <if test="myLesser_roleName != null and myLesser_roleName != ''">
         AND role_name &lt; #{myLesser_roleName,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_roleCname != null and myLesser_roleCname != ''">
         AND role_cname &lt; #{myLesser_roleCname,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_roleDesc != null and myLesser_roleDesc != ''">
         AND role_desc &lt; #{myLesser_roleDesc,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_status != null and myLesser_status != ''">
         AND status &lt; #{myLesser_status,jdbcType=INTEGER}
      </if>
      <if test="myLike_id != null and myLike_id != ''">
         AND id like CONCAT('%', #{myLike_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_roleName != null and myLike_roleName != ''">
         AND role_name like CONCAT('%', #{myLike_roleName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_roleCname != null and myLike_roleCname != ''">
         AND role_cname like CONCAT('%', #{myLike_roleCname,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_roleDesc != null and myLike_roleDesc != ''">
         AND role_desc like CONCAT('%', #{myLike_roleDesc,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_status != null and myLike_status != ''">
         AND status like CONCAT('%', #{myLike_status,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeStart_id != null and myLikeStart_id != ''">
         AND id like CONCAT('%', #{myLikeStart_id,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_roleName != null and myLikeStart_roleName != ''">
         AND role_name like CONCAT('%', #{myLikeStart_roleName,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_roleCname != null and myLikeStart_roleCname != ''">
         AND role_cname like CONCAT('%', #{myLikeStart_roleCname,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_roleDesc != null and myLikeStart_roleDesc != ''">
         AND role_desc like CONCAT('%', #{myLikeStart_roleDesc,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_status != null and myLikeStart_status != ''">
         AND status like CONCAT('%', #{myLikeStart_status,jdbcType=INTEGER})
      </if>
      <if test="myLikeEnd_id != null and myLikeEnd_id != ''">
         AND id like CONCAT( #{myLikeEnd_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_roleName != null and myLikeEnd_roleName != ''">
         AND role_name like CONCAT( #{myLikeEnd_roleName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_roleCname != null and myLikeEnd_roleCname != ''">
         AND role_cname like CONCAT( #{myLikeEnd_roleCname,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_roleDesc != null and myLikeEnd_roleDesc != ''">
         AND role_desc like CONCAT( #{myLikeEnd_roleDesc,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_status != null and myLikeEnd_status != ''">
         AND status like CONCAT( #{myLikeEnd_status,jdbcType=INTEGER},'%' )
      </if>
      <if test="myIn_id != null and myIn_id != ''">
         AND id in <foreach item="item" index="index" collection="myIn_id" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_roleName != null and myIn_roleName != ''">
         AND role_name in <foreach item="item" index="index" collection="myIn_roleName" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_roleCname != null and myIn_roleCname != ''">
         AND role_cname in <foreach item="item" index="index" collection="myIn_roleCname" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_roleDesc != null and myIn_roleDesc != ''">
         AND role_desc in <foreach item="item" index="index" collection="myIn_roleDesc" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_status != null and myIn_status != ''">
         AND status in <foreach item="item" index="index" collection="myIn_status" open="(" separator="," close=")"> #{item} </foreach>
      </if>
    </trim>
  </sql>
</mapper>