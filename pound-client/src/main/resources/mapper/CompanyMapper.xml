<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yotrio.pound.dao.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.yotrio.pound.model.Company">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="types" jdbcType="INTEGER" property="types" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, name, types, status, desc, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yotrio.pound.model.Company">
    insert into company (id, code, name, 
      types, status, desc, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{types,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{desc,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yotrio.pound.model.Company">
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        #{types,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yotrio.pound.model.Company">
    update company
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        types = #{types,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yotrio.pound.model.Company">
    update company
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      types = #{types,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      desc = #{desc,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCountByMap" parameterType="map" resultType="int">
    select count(*) from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  </if><if test="dynamicTableName == null or dynamicTableName == ''"> company</if> <include refid="Base_Query_Map_Condition" /> 
  </select>
  <select id="selectListByMap" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  </if><if test="dynamicTableName == null or dynamicTableName == ''"> company</if> <include refid="Base_Query_Map_Condition" />  order by  id desc
  </select>
  <sql id="Base_Query_Map_Condition">
    <trim prefix="where" prefixOverrides="and | or">
      <if test="id != null and id != ''">
         AND id = #{id,jdbcType=INTEGER}
      </if>
      <if test="code != null and code != ''">
         AND code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="name != null and name != ''">
         AND name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="types != null and types != ''">
         AND types = #{types,jdbcType=INTEGER}
      </if>
      <if test="status != null and status != ''">
         AND status = #{status,jdbcType=INTEGER}
      </if>
      <if test="desc != null and desc != ''">
         AND desc = #{desc,jdbcType=VARCHAR}
      </if>
      <if test="updateTime != null and updateTime != ''">
         AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="myGreater_id != null and myGreater_id != ''">
         AND id &gt; #{myGreater_id,jdbcType=INTEGER}
      </if>
      <if test="myGreater_code != null and myGreater_code != ''">
         AND code &gt; #{myGreater_code,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_name != null and myGreater_name != ''">
         AND name &gt; #{myGreater_name,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_types != null and myGreater_types != ''">
         AND types &gt; #{myGreater_types,jdbcType=INTEGER}
      </if>
      <if test="myGreater_status != null and myGreater_status != ''">
         AND status &gt; #{myGreater_status,jdbcType=INTEGER}
      </if>
      <if test="myGreater_desc != null and myGreater_desc != ''">
         AND desc &gt; #{myGreater_desc,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_updateTime != null and myGreater_updateTime != ''">
         AND update_time &gt; #{myGreater_updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="myLesser_id != null and myLesser_id != ''">
         AND id &lt; #{myLesser_id,jdbcType=INTEGER}
      </if>
      <if test="myLesser_code != null and myLesser_code != ''">
         AND code &lt; #{myLesser_code,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_name != null and myLesser_name != ''">
         AND name &lt; #{myLesser_name,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_types != null and myLesser_types != ''">
         AND types &lt; #{myLesser_types,jdbcType=INTEGER}
      </if>
      <if test="myLesser_status != null and myLesser_status != ''">
         AND status &lt; #{myLesser_status,jdbcType=INTEGER}
      </if>
      <if test="myLesser_desc != null and myLesser_desc != ''">
         AND desc &lt; #{myLesser_desc,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_updateTime != null and myLesser_updateTime != ''">
         AND update_time &lt; #{myLesser_updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="myLike_id != null and myLike_id != ''">
         AND id like CONCAT('%', #{myLike_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_code != null and myLike_code != ''">
         AND code like CONCAT('%', #{myLike_code,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_name != null and myLike_name != ''">
         AND name like CONCAT('%', #{myLike_name,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_types != null and myLike_types != ''">
         AND types like CONCAT('%', #{myLike_types,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_status != null and myLike_status != ''">
         AND status like CONCAT('%', #{myLike_status,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_desc != null and myLike_desc != ''">
         AND desc like CONCAT('%', #{myLike_desc,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_updateTime != null and myLike_updateTime != ''">
         AND update_time like CONCAT('%', #{myLike_updateTime,jdbcType=TIMESTAMP},'%' )
      </if>
      <if test="myLikeStart_id != null and myLikeStart_id != ''">
         AND id like CONCAT('%', #{myLikeStart_id,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_code != null and myLikeStart_code != ''">
         AND code like CONCAT('%', #{myLikeStart_code,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_name != null and myLikeStart_name != ''">
         AND name like CONCAT('%', #{myLikeStart_name,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_types != null and myLikeStart_types != ''">
         AND types like CONCAT('%', #{myLikeStart_types,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_status != null and myLikeStart_status != ''">
         AND status like CONCAT('%', #{myLikeStart_status,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_desc != null and myLikeStart_desc != ''">
         AND desc like CONCAT('%', #{myLikeStart_desc,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_updateTime != null and myLikeStart_updateTime != ''">
         AND update_time like CONCAT('%', #{myLikeStart_updateTime,jdbcType=TIMESTAMP})
      </if>
      <if test="myLikeEnd_id != null and myLikeEnd_id != ''">
         AND id like CONCAT( #{myLikeEnd_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_code != null and myLikeEnd_code != ''">
         AND code like CONCAT( #{myLikeEnd_code,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_name != null and myLikeEnd_name != ''">
         AND name like CONCAT( #{myLikeEnd_name,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_types != null and myLikeEnd_types != ''">
         AND types like CONCAT( #{myLikeEnd_types,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_status != null and myLikeEnd_status != ''">
         AND status like CONCAT( #{myLikeEnd_status,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_desc != null and myLikeEnd_desc != ''">
         AND desc like CONCAT( #{myLikeEnd_desc,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_updateTime != null and myLikeEnd_updateTime != ''">
         AND update_time like CONCAT( #{myLikeEnd_updateTime,jdbcType=TIMESTAMP},'%' )
      </if>
      <if test="myIn_id != null and myIn_id != ''">
         AND id in <foreach item="item" index="index" collection="myIn_id" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_code != null and myIn_code != ''">
         AND code in <foreach item="item" index="index" collection="myIn_code" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_name != null and myIn_name != ''">
         AND name in <foreach item="item" index="index" collection="myIn_name" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_types != null and myIn_types != ''">
         AND types in <foreach item="item" index="index" collection="myIn_types" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_status != null and myIn_status != ''">
         AND status in <foreach item="item" index="index" collection="myIn_status" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_desc != null and myIn_desc != ''">
         AND desc in <foreach item="item" index="index" collection="myIn_desc" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_updateTime != null and myIn_updateTime != ''">
         AND update_time in <foreach item="item" index="index" collection="myIn_updateTime" open="(" separator="," close=")"> #{item} </foreach>
      </if>
    </trim>
  </sql>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>